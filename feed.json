{
    "version": "https://jsonfeed.org/version/1",
    "title": "请相信,这个世界真的有人过着你想要的生活",
    "description": "",
    "home_page_url": "https://yangkecheng.github.io",
    "items": [
        {
            "id": "https://yangkecheng.github.io/2023/03/21/Tomcat/",
            "url": "https://yangkecheng.github.io/2023/03/21/Tomcat/",
            "title": "Tomcat谈一谈",
            "date_published": "2023-03-20T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>💡  最近项目上 Tomcat 遇到的问题比较多，所以该花点时间学习学习啦。</p>\n</div>\n<h1 id=\"tomcat\"><a class=\"markdownIt-Anchor\" href=\"#tomcat\">#</a> Tomcat</h1>\n<p>Tomacat 是由 Apache 推出的一款免费开源的 Servlet 容器，可实现 JavaWeb 程序的装载，是配置 JSP（Java Server Page）和 JAVA 系统必备的一款环境。它是 apache 软件基金会的 jakarta 项目中的一个核心项目，因为 tomcat 技术先进性能稳定和监督易用性已成为最为广泛的 jsp 服务器。<br>\n因为 Tomcat 服务器是一个免费的开放源代码的 Web 应用服务器，属于轻量级应用服务器，所以在中小型系统和并发访问用户不是很多的场合下被普遍使用。<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b21jYXQuYXBhY2hlLm9yZy9kb3dubG9hZC05MC5jZ2k=\">tomcat 下载地址</span><br>\n Tomcat 下载解压完毕以后，首先进入到…/apache-tomcat-9.0.73\\conf 目录下找到 <code>logging.properties</code>  文件 在最后一行中加上 <code>java.util.logging.ConsoleHandler.encoding = GBK</code> <br>\n 这个是为了让 tomcat 在输入 log 信息的时候不出现乱码的情况。然后进入到 bin 目录下的 cmd 程序输入 <code>startup.bat</code>  也就相当于在 bin 目录下双击 <code>startup.bat</code>  文件启动 tomcat。<br>\ntomcat 的默认端口号是 8080，启动完成以后访问 http://localhost:8080 / 即可访问 tomcat。<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/tomcat/tomcat02.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"目录结构\"><a class=\"markdownIt-Anchor\" href=\"#目录结构\">#</a> 目录结构</h1>\n<p>bin： 专门用来存放 Tomcat 服务器的可执行程序<br>\n conf： 专门用来存放 Tomcat 服务器的配置文件<br>\n lib： 专门用来存放 Tomcat 服务器的 jar 包<br>\n logs： 专门用来存放 Tomcat 服务器运行时输出的日志信息<br>\n temp： 专门用来存放 Tomcat 服务器运行时产生的临时数据<br>\n webapps： 专门用来存放部署的 web 工程<br>\n work： Tomcat 工作时的目录，用来存放 Tomcat 运行时 jsp 翻译为 servlet 的源码，和 Session 钝化的目录<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/tomcat/tomcat01.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"一个tomcat中启动单个项目\"><a class=\"markdownIt-Anchor\" href=\"#一个tomcat中启动单个项目\">#</a> 一个 Tomcat 中启动单个项目</h1>\n<p>首先我们使用 bootdo 开源项目作为在 Tomcat 中部署的项目，我们要在 Tomcat 中更改一下几个配置才能启动成功</p>\n<ol>\n<li>在 /conf/context.xml 的 </Context>前添加以下内容（大小默认是 1024，单位是 KB）：<Resources cachingAllowed=\"true\" cacheMaxSize=\"100000\" /></li>\n<li>在 /conf/context.xml<Connector port=\"8088\" protocol=\"HTTP/1.1\" connectionTimeout=\"20000\" redirectPort=\"8443\" />中更改 Tomcat 的端口号 我这里更改的是 8088<br>\n 然后将你要部署的项目 install 进行打包改名为 ROOT.war 放入 webapps 下，进入 bin 文件双击 <code>startup.bat</code> tomcat 会在 webapps 进行解压出一个 ROOT 的一个文件夹加载你的程序。然后访问 http://localhost:8080 / 即可访问你的程序</li>\n<li>记一个问题 因为我有很多 Tomcat 要启动 所以没有配置 tomcat 的环境变量。 然后我是用 bootdo.war 启动的包，导致加载 static 静态资源的时候没有加载进去，然后我就想着在 server.xml 中加入 <code>&lt;Context path=&quot;&quot; docBase=&quot;\\webapps\\bootdo&quot; debug=&quot;0&quot; reloadable=&quot;true&quot;/&gt;</code> <br>\n 在加载中找到 static 静态资源，但是启动的时候是有问题的，如果没有配置环境变量的话需要把全路径加上，这样才可以找到你的项目根路径 <code>&lt;Context path=&quot;&quot; docBase=&quot;E:\\workFile\\tomcat\\apache-tomcat-9.0.73\\webapps\\bootdo&quot; debug=&quot;0&quot; reloadable=&quot;true&quot;/&gt;</code></li>\n</ol>\n<h1 id=\"一个tomcat中启动多个项目\"><a class=\"markdownIt-Anchor\" href=\"#一个tomcat中启动多个项目\">#</a> 一个 Tomcat 中启动多个项目</h1>\n",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/19/Nvm-good/",
            "url": "https://yangkecheng.github.io/2023/03/19/Nvm-good/",
            "title": "NVM 香香的",
            "date_published": "2023-03-18T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>👉  由于要在电脑上写一 Demo，找了个前后台分离的开源项目运行，但是这个项目前端是 vue3 的和我另一个 vue2 的项目 node 版本上有些冲突<br>\n vue2 项目的 node 版本是 12，vue3 项目在 node 12v 版本下运行不了，要求最低 14v。一开始我还是卸载 12v 去装 18v 但是有些麻烦于是就用 nvm 去控制 node 版本感觉很香。</p>\n</div>\n<p>电脑上有 node.js 的话也不用卸载。安装完成以后他会自动将你已经安装好的 node 检测出来</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NvcmV5YnV0bGVyL252bS13aW5kb3dzL3JlbGVhc2Vz\">nvm 下载地址</span> 选择 nvm-setup.zip 下载。<br>\n安装的时候直接无脑下一步就行了<br>\n下面是使用的时候一些基本命令<br>\n <code>nvm list</code>  查看已有的 node 安装</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Users\\Administrator&gt;nvm list</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  * 18.15.0 (Currently using 64-bit executable)</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    8.11.2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>C:\\Users\\Administrator&gt;</pre></td></tr></table></figure><p><code>nvm list available</code>  查看有哪些可安装的版本</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Users\\Administrator&gt;nvm list available</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>|   CURRENT    |     LTS      |  OLD STABLE  | OLD UNSTABLE |</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>|--------------|--------------|--------------|--------------|</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>|    19.8.1    |   18.15.0    |   0.12.18    |   0.11.16    |</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>|    19.8.0    |   18.14.2    |   0.12.17    |   0.11.15    |</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>|    19.7.0    |   18.14.1    |   0.12.16    |   0.11.14    |</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>|    19.6.1    |   18.14.0    |   0.12.15    |   0.11.13    |</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>|    19.6.0    |   18.13.0    |   0.12.14    |   0.11.12    |</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>|    19.5.0    |   18.12.1    |   0.12.13    |   0.11.11    |</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>|    19.4.0    |   18.12.0    |   0.12.12    |   0.11.10    |</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>|    19.3.0    |   16.19.1    |   0.12.11    |    0.11.9    |</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>|    19.2.0    |   16.19.0    |   0.12.10    |    0.11.8    |</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>|    19.1.0    |   16.18.1    |    0.12.9    |    0.11.7    |</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>|    19.0.1    |   16.18.0    |    0.12.8    |    0.11.6    |</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>|    19.0.0    |   16.17.1    |    0.12.7    |    0.11.5    |</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>|   18.11.0    |   16.17.0    |    0.12.6    |    0.11.4    |</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>|   18.10.0    |   16.16.0    |    0.12.5    |    0.11.3    |</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>|    18.9.1    |   16.15.1    |    0.12.4    |    0.11.2    |</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>|    18.9.0    |   16.15.0    |    0.12.3    |    0.11.1    |</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>|    18.8.0    |   16.14.2    |    0.12.2    |    0.11.0    |</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>|    18.7.0    |   16.14.1    |    0.12.1    |    0.9.12    |</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>|    18.6.0    |   16.14.0    |    0.12.0    |    0.9.11    |</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>|    18.5.0    |   16.13.2    |   0.10.48    |    0.9.10    |</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>This is a partial list. For a complete list, visit https:&#x2F;&#x2F;nodejs.org&#x2F;en&#x2F;download&#x2F;releases</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>C:\\Users\\Administrator&gt;</pre></td></tr></table></figure><p><code>nvm install 19.8.0</code>  安装你需要的 node 版本 nvm install 版本号，然后 <code>nvm list</code>  查看是否安装成功</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Users\\Administrator&gt;nvm install 19.8.0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Downloading node.js version 19.8.0 (64-bit)...</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Extracting node and npm...</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Complete</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>npm v9.5.1 installed successfully.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Installation complete. If you want to use this version, type</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>nvm use 19.8.0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>C:\\Users\\Administrator&gt;nvm list</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    19.8.1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    19.8.0</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>  * 18.15.0 (Currently using 64-bit executable)</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    8.11.2</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>C:\\Users\\Administrator&gt;</pre></td></tr></table></figure><p><code>nvm use 19.8.0</code>  将当前 node 版本切换到 19.8.0 nvm use 版本号  <code>nvm list</code>  查看是否切换成功</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Users\\Administrator&gt;nvm use 19.8.0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Now using node v19.8.0 (64-bit)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>C:\\Users\\Administrator&gt;nvm list</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    19.8.1</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  * 19.8.0 (Currently using 64-bit executable)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    18.15.0</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    8.11.2</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>C:\\Users\\Administrator&gt;node -v</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>v19.8.0</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>C:\\Users\\Administrator&gt;npm -v</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>9.5.1</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>C:\\Users\\Administrator&gt;</pre></td></tr></table></figure><p><code>nvm uninstall 19.8.0</code>  卸载指定的 node 版本 nvm uninstall 版本号  <code>nvm list</code>  查看是否卸载成功</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Users\\Administrator&gt;nvm uninstall 19.8.0</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Uninstalling node v19.8.0... done</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>C:\\Users\\Administrator&gt;nvm list</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    19.8.1</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  * 18.15.0 (Currently using 64-bit executable)</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    8.11.2</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>C:\\Users\\Administrator&gt;</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/16/Oracle-And-Mysql/",
            "url": "https://yangkecheng.github.io/2023/03/16/Oracle-And-Mysql/",
            "title": "Oracle和Mysql的区别",
            "date_published": "2023-03-15T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>💡   Oracle、Mysql 当今最火热的两个关系型数据库的区别？</p>\n</div>\n<p>Oracle 和 Mysql 如今都属于甲骨文公司旗下的数据库，他们都是当前比较流行的关系型数据库应用于各种平台</p>\n<h1 id=\"各自适用场景\"><a class=\"markdownIt-Anchor\" href=\"#各自适用场景\">#</a> 各自适用场景</h1>\n<p>Mysql 属于轻量级的数据库小巧，免费，对硬件的要求很低，安装使用快捷方便。<br>\nOracle 这属于重量级的数据库，收费，对硬件的要求有些高，能够支撑很多单节点或者集群的环境。<br>\n目前很多互联网公司都会选择 Oracle，因为 Oracle 能够支持大并发、大访问量，对大型项目能够做到很好的支撑。<br>\n最重要的就是 Oracle 足够安全，Mysql 对安全的验证只有三种 账户 密码 位置 而 Oracle 则有多重验证如用户名，密码，配置文件，本地身份验证，外部身份验证，高级安全增强功能等。并且可以设置用户的操作权限<br>\n Mysql 默认端口 3306，默认用户是 root。Oracle 默认端口 1521，默认用户是 system。</p>\n<h1 id=\"数据类型区别\"><a class=\"markdownIt-Anchor\" href=\"#数据类型区别\">#</a> 数据类型区别</h1>\n<p>Mysql 常用的数据类型有：<br>\n <code>float</code>  (m,d) 单精度浮点型 8 位精度 (4 字节) m 总个数，d 小数位<br>\n <code>int</code>  (m) 4 个字节 范围 (-2147483648~2147483647)<br>\n <code>double</code>  (m,d) 双精度浮点型 16 位精度 (8 字节) m 总个数，d 小数位<br>\n <code>char</code>  (n) 固定长度，最多 255 个字符<br>\n <code>varchar</code>  (n) 固定长度，最多 65535 个字符<br>\n <code>tinytext</code>  可变长度，最多 255 个字符<br>\n <code>text</code>  可变长度，最多 65535 个字符<br>\n <code>mediumtext</code>  可变长度，最多 2 的 24 次方 - 1 个字符<br>\n <code>longtext</code>  可变长度，最多 2 的 32 次方 - 1 个字符<br>\n <code>date</code>  日期 ‘2023-03-16’<br>\n <code>time</code>  时间 ‘21:44:36’<br>\n <code>datetime</code>  日期时间 ‘2023-03-16 21:44:36’<br>\n <code>timestamp</code>  自动存储记录修改时间</p>\n<p>Oracle 常用的数据类型有：<br>\n <code>CHAR</code>  固定长度字符串 最大长度 2000bytes 　<br>\n <code>VARCHAR2</code>  可变长度的字符串，最大长度 4000bytes 可做索引的最大长度 749<br>\n <code>NCHAR</code>  根据字符集而定的固定长度字符串 最大长度 2000bytes 　<br>\n <code>NVARCHAR2</code>  根据字符集而定的可变长度字符串 最大长度 4000bytes 　<br>\n <code>DATE</code>  日期（日 - 月 - 年） DD-MM-YY (HH-MI-SS)<br>\n <code>TIMESTAMP</code>  有小数位秒信息<br>\n <code>LONG</code>  超长字符串 最大长度 2G<br>\n <code>BLOB</code>  二进制数据 最大长度 4G 　<br>\n <code>CLOB</code>  字符数据 最大长度 4G 　<br>\n <code>ROWID</code>  数据表中记录的唯一行号 10bytes xxxx.xxx.xxx 格式，x 为 0 或 1<br>\n <code>NROWID</code>  二进制数据表中记录的唯一行号 最大长度 4000bytes<br>\n <code>NUMBER</code>  (P,S) 数字类型 P 为整数位，S 为小数位 　<br>\n <code>FLOAT</code>  浮点数类型 NUMBER (38)，双精度 　<br>\n <code>REAL</code>  实数类型 NUMBER (63)，精度更</p>\n<p><code>CHAR</code>  是定长的不足的长度用被空格补齐。 <code>VARCHAR</code>  是变长的不足的长度会被截掉。 <code>VARCHAR2</code>  是 Oracle 独有的数据类型他和 <code>VARCHAR</code>  一样都是变长的但是最大长度是 <code>VARCHAR</code>  的两倍所以是 2</p>\n<h1 id=\"语法区别\"><a class=\"markdownIt-Anchor\" href=\"#语法区别\">#</a> 语法区别</h1>\n<ol>\n<li>Oracle 中的 <code>length(str)</code>  是获取字符串长度的函数，Mysql 中对应的函数为 <code>char_length(str)</code> 。</li>\n<li>Oracle 中可过 <code>sys_guid()</code>  函数是生成随机序列，Mysql 通过 <code>UUID()</code>  生成随机序列。</li>\n<li>Oracle 中 <code>to_char(sysdate, 'YYYY-MM-DD')</code>  将时间转换为字符串型时间，Mysql 使用 <code>date_format(NOW(),'%Y-%m-%d')</code> 。</li>\n<li>Oracle 中 <code>to_date('2019-01-01', 'YYYY-MM-DD')</code>  将字符串型时间转换为时间类型，Mysql 使用 <code>str_to_date('2019-01-01','%Y-%m-%d')</code> 。</li>\n<li>Mysql 可识别双引号和单引号，Oracle 只能识别单引号。</li>\n<li>Oracle 可用 <code>||</code>  来连接字符串，但 MySQL 不支持’||' 连接，Mysql 可通过 <code>concat()</code>  函数链接字符串。</li>\n<li>Mysql 分页用 <code>limit</code>  关键字，而 Oracle 使用 <code>rownum</code>  字段表明位置。</li>\n<li>Mysql 中 0、1 判断真假，Oracle 中 true false。</li>\n</ol>\n<h1 id=\"存储引擎\"><a class=\"markdownIt-Anchor\" href=\"#存储引擎\">#</a> 存储引擎</h1>\n<p>Mysql 常用的有两种存储引擎 Innodb 和 MyIASM。 默认的存储引擎是 MyIASM，MyIASM 最大的缺点就是不提供事务支持和仅支持表级锁不支持行级锁，每次 select，update，delete，insert 语句都会给表自动加锁。<br>\n而 InnoDB 则支持事务和行级锁大幅度提高了多用户并发操作的性能，但是 InnoDB 操作中如果 where 条件后没有主键的话就不会触发行级锁任然会全表锁。<br>\nOracle 则没有存储引擎的概念，提供事务的支持并使用的是行级锁。</p>\n<h1 id=\"层次结构\"><a class=\"markdownIt-Anchor\" href=\"#层次结构\">#</a> 层次结构</h1>\n<p>Oracle：创建一个 Oracle 数据库，数据库下有好多用户：sys,system,scott 等，不同用户操作不同的表空间，对每个表的权限划分的很详细。<br>\nMysql：默认用户是 root，用户下可以创建好多数据库，每个数据库下还有好多表，每个用户都可以操作任何的表。</p>\n",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/13/Oracle-Install/",
            "url": "https://yangkecheng.github.io/2023/03/13/Oracle-Install/",
            "title": "Oracle Install",
            "date_published": "2023-03-12T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>💡  java 环境配置系列，Oracle 详解及安装配置。</p>\n</div>\n<h1 id=\"oracle\"><a class=\"markdownIt-Anchor\" href=\"#oracle\">#</a> Oracle</h1>\n<p>Oracle 当今使用最广泛最流行的关系型数据库，由甲骨文公司开发、运营与维护。<br>\n在数据库领域中一直处于领先地位，系统可移植性好、使用方便、功能与性能强大、效率高，适用于大、中、小软件开发。放眼当下因高效率（适应高吞吐量）、可靠性好仍是开发商业软件最好的选择（就是要钱还贵）。</p>\n<h1 id=\"安装时的坑\"><a class=\"markdownIt-Anchor\" href=\"#安装时的坑\">#</a> 安装时的坑</h1>\n<p>前几天在安装的时候在第九步的时候出现的问题<br>\n导致安装完以后 sys 的默认密码登录不进去 原因是因为 在给所有账户设置默认口令的时候输入的是 ROOT 不符合 Oracle 的建议标准<br>\n Oracle 就会 sys 的密码进行更改，我们只需要安装下面几个步骤使用超级管理员新建用户设置密码进行连接就可以了<br>\n win+R 进行 cmd</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-- 使用超级管理员登录</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONN sys&#x2F;change_on_install AS SYSDBA ;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-- 创建 c##scott 用户</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CREATE USER c##scott IDENTIFIED BY tiger ;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-- 为用户授权</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>GRANT CONNECT,RESOURCE,UNLIMITED TABLESPACE TO c##scott CONTAINER&#x3D;ALL ;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-- 设置用户使用的表空间</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ALTER USER c##scott DEFAULT TABLESPACE USERS;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ALTER USER c##scott TEMPORARY TABLESPACE TEMP;</pre></td></tr></table></figure><figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>-- 使用 c##scott 用户登录</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>CONNECT c##scott&#x2F;tiger</pre></td></tr></table></figure><p>如果要重新 sys 的密码 还有一种方法，安装完数据库以后在 Windows 菜单栏中有 Database Configuration Assistant<br>\n 这个是进行表空间配置的，我们可以使用这个进行操作表空间，在操作表空间的同时可以再次的给 sys 账户设置统一默认密码</p>\n<h1 id=\"下载及安装\"><a class=\"markdownIt-Anchor\" href=\"#下载及安装\">#</a> 下载及安装</h1>\n<h2 id=\"downloads\"><a class=\"markdownIt-Anchor\" href=\"#downloads\">#</a> Downloads</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4ucXVhcmsuY24vcy83MzRmY2IyMmU1ZDE=\">Oracle11 下载 夸克网盘</span><br>\n <code>提取码：fr8P</code></p>\n<h2 id=\"install\"><a class=\"markdownIt-Anchor\" href=\"#install\">#</a> Install</h2>\n<p>我们将下载好的 Oracle 解压出来，并双击 setup.exe<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle01.png\" alt=\"在这里插入图片描述\"><br>\n点击继续即可 环境不满足要求是因为 Windows 的原因<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle02.png\" alt=\"在这里插入图片描述\"><br>\n打对钩下一步<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle03.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle04.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle05.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle06.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle07.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle08.png\" alt=\"在这里插入图片描述\"><br>\n这里就要注意了 因为我输入口令的时候输入的是 root 不符合 Oracle 建议的标准 但是我还是点击继续了<br>\n这样会导致他默认密码的错误 上面已经给出了解决方案<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle09.png\" alt=\"在这里插入图片描述\"><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle10.png\" alt=\"在这里插入图片描述\"><br>\n等待 100% 就可以了<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/oracle/oracle11.png\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/08/Mysql-Install/",
            "url": "https://yangkecheng.github.io/2023/03/08/Mysql-Install/",
            "title": "Mysql Install",
            "date_published": "2023-03-07T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>💡  java 环境配置系列，Mysql 详解及安装配置。</p>\n</div>\n<h1 id=\"mysql\"><a class=\"markdownIt-Anchor\" href=\"#mysql\">#</a> MySQL</h1>\n<p>开源免费的数据库，小型的数据库。目前已经被 Oracle 收购了，MySQL6.x 版本也已经开始收费。</p>\n<h1 id=\"下载及安装\"><a class=\"markdownIt-Anchor\" href=\"#下载及安装\">#</a> 下载及安装</h1>\n<h2 id=\"downloads\"><a class=\"markdownIt-Anchor\" href=\"#downloads\">#</a> Downloads</h2>\n<p>Mysql 的官网提供了两种安装方式 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9pbnN0YWxsZXIv\">下载地址</span><br>\n第一种：在线版安装 (联网安装，安装时设备必须能够访问互联网)<br>\n 第二种：离线版安装 (离线安装，下载离线安装包进行离线安装)<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/mysql/mysql01.png\" alt=\"在这里插入图片描述\"><br>\n感兴趣的同学可以体验一下上面两种安装方式，因为博主一向不喜欢按常理出牌所以推荐第三种方案 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXYubXlzcWwuY29tL2Rvd25sb2Fkcy9teXNxbC81LjUuaHRtbCNkb3dubG9hZHM=\">下载地址</span><br>\n下载已经安装好的压缩包进行配置，这样的成功率及高并且很快，能加快我们写 bug 的进度。<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/mysql/mysql02.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"install\"><a class=\"markdownIt-Anchor\" href=\"#install\">#</a> Install</h2>\n<p>首先把下载的文件解压到你要安装的目录下<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/mysql/mysql03.png\" alt=\"在这里插入图片描述\"><br>\n在文件中创建一个名为 my 的.ini 的文件，并将以下内容粘贴进去<br>\n切记将 basedir 路径改成你对应的路径</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>[mysql]</pre></td></tr><tr><td data-num=\"2\"></td><td><pre># 设置 mysql 客户端默认字符集</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>default-character-set&#x3D;utf8</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>[mysqld]</pre></td></tr><tr><td data-num=\"5\"></td><td><pre># 设置 3306 端口</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>port &#x3D; 3306</pre></td></tr><tr><td data-num=\"7\"></td><td><pre># 设置 mysql 的安装目录</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>basedir &#x3D; E:\\\\Program Files\\\\mysql\\\\mysql-8.0.32-winx64</pre></td></tr><tr><td data-num=\"9\"></td><td><pre># 设置 mysql 数据库的数据的存放目录</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>datadir &#x3D; E:\\\\Program Files\\\\mysql\\\\mysql-8.0.32-winx64\\\\data</pre></td></tr><tr><td data-num=\"11\"></td><td><pre># 允许最大连接数</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>max_connections&#x3D;20</pre></td></tr><tr><td data-num=\"13\"></td><td><pre># 服务端使用的字符集默认为 8 比特编码的 latin1 字符集</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>character-set-server&#x3D;utf8</pre></td></tr><tr><td data-num=\"15\"></td><td><pre># 创建新表时将使用的默认存储引擎</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>default-storage-engine&#x3D;INNODB</pre></td></tr><tr><td data-num=\"17\"></td><td><pre># 创建模式</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>sql_mode &#x3D; NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</pre></td></tr></table></figure><h2 id=\"环境变量\"><a class=\"markdownIt-Anchor\" href=\"#环境变量\">#</a> 环境变量</h2>\n<p>然后就是给 mysql 配置环境变量，在系统变量中双击 Path，新建环境变量具体如下提所示：<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/mysql/mysql04.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"初始化mysql\"><a class=\"markdownIt-Anchor\" href=\"#初始化mysql\">#</a> 初始化 Mysql</h2>\n<p>环境变量配置完成以后我们进行初始化 mysql 数据库</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>E:\\Program Files\\mysql\\mysql-8.0.32-winx64&gt;mysqld --install</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>以下为成功的提示信息，如果失败请检查 my.ini 中你的路径是否配置正确</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Service successfully installed.</pre></td></tr></table></figure><p>mysql 初始化完成以后会生成一个 data 文件，在 data 文件中会有一个 WIN-UOKGH2GH01M.err .err 结尾的文件，里面有 mysql 初始化的账户和密码，在这个文件中更改密码是无效的，后面会有操作进行修改<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/mysql/mysql05.png\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"启动服务\"><a class=\"markdownIt-Anchor\" href=\"#启动服务\">#</a> 启动服务</h2>\n<p>在 mysql 安装包中进入 cmd 指令框，启动 mysql 服务。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>E:\\Program Files\\mysql\\mysql-8.0.32-winx64&gt;net start mysql</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>MySQL 服务正在启动 .</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>MySQL 服务已经启动成功。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>E:\\Program Files\\mysql\\mysql-8.0.32-winx64&gt;</pre></td></tr></table></figure><p>然后输入用户名密码进行连接 mysql -uroot -pi#/*Lmh8IljT<br>\nroot 为你的初始化账户   i#/*Lmh8IljT 为你的初始化密码</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>E:\\Program Files\\mysql\\mysql-8.0.32-winx64&gt;mysql -uroot -pi#&#x2F;*Lmh8IljT</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>mysql: [Warning] Using a password on the command line interface can be insecure.</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Welcome to the MySQL monitor.  Commands end with ; or \\g.</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Your MySQL connection id is 10</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Server version: 8.0.32</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>Copyright (c) 2000, 2023, Oracle and&#x2F;or its aff&#96;&#96;iliates.</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>Oracle is a registered trademark of Oracle Corporation and&#x2F;or its</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>affiliates. Other names may be trademarks of their respective</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>owners.</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Type &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mysql&gt;</pre></td></tr></table></figure><p>连接成功以后我们就可以进行密码的修改了 <code>alter user 'root'@'localhost' identified with mysql_native_password by 'root';</code>  root 为我要修改成的密码，切记后面的 <code>;</code>  也要加上。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mysql&gt; alter user &#39;root&#39;@&#39;localhost&#39; identified with mysql_native_password by &#39;root&#39;;</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>Query OK, 0 rows affected (0.01 sec)</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mysql&gt;</pre></td></tr></table></figure><p>成功以后我们就可以使用客户端进行连接了，mysql 默认的端口号 3306，我这里就不在给大家展示了，如果有什么问题请按照流程再看一遍是不是有什么漏掉的，或者说之前的 mysql 没有卸载干净。<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/mysql/mysql06.png\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/07/BS-Transfer-CS/",
            "url": "https://yangkecheng.github.io/2023/03/07/BS-Transfer-CS/",
            "title": "B/S项目调用C/S项目并嵌套页面",
            "date_published": "2023-03-06T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>在给予 java 的 B/S 项目中实现调用 c#.net 的 C/S 项目，并将 C/S 的页面嵌套在 B/S 中进行展示。<br>\n方法一：在 C/S 项目中嵌套 WebBrowser 控件将页面托管到特定 URL，然后在 B/S 进行对 URL 的嵌套调用。<br>\n方法二：在 B/S 项目调用 C# 编写的.exe 程序，弹出相应的页面。</p>\n</div>\n<h1 id=\"webbrowser控件\"><a class=\"markdownIt-Anchor\" href=\"#webbrowser控件\">#</a> WebBrowser 控件</h1>\n<pre><code>WebBrowser 控件为 WebBrowser ActiveX 控件提供了托管包装器。 托管包装器可在 Windows 窗体客户端应用程序中显示网页。 你可以使用 WebBrowser 控件在应用程序中复制 Internet Explorer Web 浏览功能，也可以禁用默认 Internet Explorer 功能并将该控件用作简单的 HTML 文档查看器。 你还可以使用该控件将基于 DHTML 的用户界面元素添加到窗体，隐藏这些元素托管在 WebBrowser 控件中的这一信息。 使用此方法可在单个应用程序中无缝地结合 Web 控件和 Windows 窗体控件。\n</code></pre>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybi5taWNyb3NvZnQuY29tL3poLWNuL2RvdG5ldC9kZXNrdG9wL3dpbmZvcm1zL2NvbnRyb2xzL3dlYmJyb3dzZXItY29udHJvbC13aW5kb3dzLWZvcm1zP3ZpZXc9bmV0ZnJhbWV3b3JrZGVza3RvcC00Ljg=\">WebBrowser 官网概述</span></p>\n<h1 id=\"0319更-web调用用户本地exe文件\"><a class=\"markdownIt-Anchor\" href=\"#0319更-web调用用户本地exe文件\">#</a> 0319 更 web 调用用户本地.exe 文件</h1>\n<p>Web 程序调用 C/S 系统中的.exe 文件启动相应的页面</p>\n<p>首先我们要打开用户本地的应用的话，需要先进行添加注册表<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/bscs/bs-cs1.png\" alt=\"在这里插入图片描述\"><br>\n新建一个名为 Micro.Live.reg 的文件  <code>E:\\\\workFile\\\\Typora\\\\Typora.exe</code>  将这个修改为你要调用的 exe 文件路径，因为是测试我这个就打开一个 Typora 文本编辑器。</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Windows Registry Editor Version 5.00</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>[HKEY_CLASSES_ROOT\\Micro.Live]</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>&quot;URL Protocol&quot;&#x3D;&quot;E:\\\\workFile\\\\Typora\\\\Typora.exe&quot;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>@&#x3D;&quot;Micro.Live.Protocol&quot;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>[HKEY_CLASSES_ROOT\\Micro.Live\\DefaultIcon]</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>@&#x3D;&quot;E:\\\\workFile\\\\Typora\\\\Typora.exe,1&quot;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>[HKEY_CLASSES_ROOT\\Micro.Live\\shell]</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>[HKEY_CLASSES_ROOT\\Micro.Live\\shell\\open]</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>[HKEY_CLASSES_ROOT\\Micro.Live\\shell\\open\\command]</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>@&#x3D;&quot;E:\\\\workFile\\\\Typora\\\\Typora.exe&quot;</pre></td></tr></table></figure><p>双击运行 Micro.Live.reg 新增注册表，因为这里是手动添加注册表的，后续考虑在后台操作添加用户本地的注册表<br>\n <code>&lt;a href=&quot;Micro.Live://&quot;&gt;WebExe，启动Exe应用程序&lt;/a&gt;</code>  再页面上双击即可调用.exe 文件<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/bscs/bs-cs2.png\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"0315更-java调用exe文件\"><a class=\"markdownIt-Anchor\" href=\"#0315更-java调用exe文件\">#</a> 0315 更 java 调用.exe 文件</h1>\n<p>前面说的 WebBrowser 控件 需要 C/S 系统进行页面开发的更改，将他们的前台页面使用 WebBrowser 控件进行重新开发，耗费的时间和代价可能有些大<br>\n另一种方案，使用 Java 程序调用 C/S 系统中的.exe 文件启动相应的页面</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#x2F;**</pre></td></tr><tr><td data-num=\"2\"></td><td><pre> * id: 调用.exe 文件要传的参数</pre></td></tr><tr><td data-num=\"3\"></td><td><pre> * path: 你 TEST_001.exe 的路径</pre></td></tr><tr><td data-num=\"4\"></td><td><pre> *&#x2F;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>public Process runExe (String path,String params) &#123;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\tRuntime rn &#x3D; Runtime.getRuntime ();</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\tProcess p &#x3D; null;</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tString [] parm &#x3D; &#123;path,params&#125;;</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\ttry &#123;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tp &#x3D; rn.exec (parm);&#x2F;&#x2F; 执行.exe 文件</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t&#125; catch (Exception e) &#123;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\tSystem.out.println (&quot;Error&quot;+e);</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t&#125;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\treturn p;</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>&#125;</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/02/Tomcat-Nginx-Service-Registry/",
            "url": "https://yangkecheng.github.io/2023/03/02/Tomcat-Nginx-Service-Registry/",
            "title": "Tomcat And Nginx 服务注册",
            "date_published": "2023-03-01T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>记一个需求：<br>\n前后端分离的项目 <code>String Boot + Vue</code>  初始部署在 97 服务上，使用 <code>Tomcat+Nginx</code>  进行部署<br>\n还有一个 98 的服务器 他们有一个共享盘，如果 97 服务挂掉的话 98 服务就会自启并可以读取到这个盘<br>\n需要在 98 上将 Tomcat 和 Nginx 进行服务注册，这样 97 挂掉的时候 98 的服务就可以把服务自启动<br>\n 97 和 98 有一个前置的 Nginx 对外提供 101 IP 进行访问</p>\n</div>\n<h1 id=\"tomecat-服务注册\"><a class=\"markdownIt-Anchor\" href=\"#tomecat-服务注册\">#</a>  <code>Tomecat</code>  服务注册</h1>\n<p>首先 cd 到 Tomcat 的 bin 目录下，有一个 service.bat 的批处理文件，这个文件就是为我们将 Tomcat 注册成系统服务所用。<br>\n如果成功可以看到以下提示信息：The Service ‘服务名’  has been installed<br>\n 注册服务：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>service.bat  install  &#39; 服务名&#39;</pre></td></tr></table></figure><p>剔除服务：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>service.bat  install  &#39; 服务名&#39;</pre></td></tr></table></figure><p>启动服务：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>net  start  &#39; 服务名&#39;</pre></td></tr></table></figure><p>服务设置成开机自启动：</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sc  config  &#39; 服务名 &#39;   start&#x3D;  auto</pre></td></tr></table></figure><h1 id=\"nginx-服务注册\"><a class=\"markdownIt-Anchor\" href=\"#nginx-服务注册\">#</a>  <code>Nginx</code>  服务注册</h1>\n<p>首先需要下载一个 Windows 服务注册的工具 <span class=\"exturl\" data-url=\"aHR0cDovL3JlcG8uamVua2lucy1jaS5vcmcvcmVsZWFzZXMvY29tL3N1bi93aW5zdy93aW5zdy8yLjAuMi93aW5zdy0yLjAuMi1iaW4uZXhl\">winsw-2.0.2-bin.exe</span><br>\n 将下载下来的工具重命名 nginx-service.exe 并放在 nginx 目录下<br>\n另创建一个 nginx-service.xml 的文件 内容如下:</p>\n<figure class=\"highlight xml\"><figcaption data-lang=\"XML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>service</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>id</span><span class=\"token punctuation\">></span></span>nginx-service<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>id</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>name</span><span class=\"token punctuation\">></span></span>nginx-service<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>name</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>description</span><span class=\"token punctuation\">></span></span>nginx-service<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>description</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>env</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>path<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>E:\\Work\\Server-Nginx\\nginx-1.18.0<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>executable</span><span class=\"token punctuation\">></span></span>E:/workFile/nginx/nginx-1.22.1/nginx.exe<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>executable</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>arguments</span><span class=\"token punctuation\">></span></span>-p E:/workFile/nginx/nginx-1.22.1<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>arguments</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>logpath</span><span class=\"token punctuation\">></span></span>E:/Work/Server-Nginx/nginx-1.18.0/logs/<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>logpath</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>logmode</span><span class=\"token punctuation\">></span></span>roll<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>logmode</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>service</span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p><img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/nginx/nginx01.png\" alt=\"在这里插入图片描述\"></p>\n<p>在当前目录下进入 cmd 命令 注册服务:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nginx-service.exe install</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>成功后会出现如下信息:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2023-03-07 22:10:56,445 INFO  - Starting ServiceWrapper in the CLI mode</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>2023-03-07 22:10:56,668 INFO  - Completed. Exit code is 0</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>如果报错 在 logs 目录下查看 error 日志</pre></td></tr></table></figure><p>然后就可以在服务中心看到你所注册的服务<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/nginx/nginx02.png\" alt=\"在这里插入图片描述\"></p>\n<p>卸载服务:</p>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>nginx-service.exe uninstall</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>成功后会出现如下信息:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>2023-03-07 22:13:01,601 INFO  - Starting ServiceWrapper in the CLI mode</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>2023-03-07 22:13:01,750 INFO  - Uninstalling the service with id &#39;nginx-service&#39;</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>2023-03-07 22:13:01,760 WARN  - The service with id &#39;nginx-service&#39; does not exist. Nothing to uninstall</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>2023-03-07 22:13:01,762 INFO  - Completed. Exit code is 0</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>如果报错 在 logs 目录下查看 error 日志</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/03/01/Dubbo-Study/",
            "url": "https://yangkecheng.github.io/2023/03/01/Dubbo-Study/",
            "title": "Dubbo Study",
            "date_published": "2023-02-28T16:00:00.000Z",
            "content_html": "<div class=\"note info\">\n<p>这篇文章转载自我在 CSDN 上的总结<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NTcwNTA0NS9hcnRpY2xlL2RldGFpbHMvMTA0MTcyMTMzP3NwbT0xMDAxLjIwMTQuMzAwMS41NTAx\">《Dubbo 学习笔记》</span>。</p>\n</div>\n<h1 id=\"分布式简要说明\"><a class=\"markdownIt-Anchor\" href=\"#分布式简要说明\">#</a> 分布式简要说明</h1>\n<p><strong>Dubbo 是用于分布式系统的框架所以我们要先了解什么是分布式</strong><br>\n<mark>分布式系统是若干独立 计算机的集合，这些计算机对于用户来说就像单个相关系统。</mark></p>\n<p>老式系统 (单一应用架构) 就是把一个系统，统一放到一个服务器当中然后每一个服务器上放一个系统，如果说要更新代码的话，每一个服务器上的系统都要重新去部署十分的麻烦。</p>\n<p>而分布式系统就是将一个完整的系统拆分成多个不同的服务，然后在将每一个服务单独的放到一个服务器当中。(三个臭皮匠赛过诸葛亮)</p>\n<h1 id=\"应用架构的发展演变\"><a class=\"markdownIt-Anchor\" href=\"#应用架构的发展演变\">#</a> 应用架构的发展演变</h1>\n<p><img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo01.png\" alt=\"应用架构的发展演变\"><br>\n<mark> ORM</mark><br>\n<strong> 单一应用架构</strong>：一个项目装到一个服务器当中，也可以运行多个服务器每一个服务器当中都装一个项目。<br>\n缺点：1. 如果要添加某一个功能的话就要把一个项目重新打包，在分别部署到每一个服务器当中去。2. 如果后期项目越来越大的话单台服务器跑一个项目压力会很大的。会不利于维护，开发和程序的性能。<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo02.png\" alt=\"单一应用架构\"><br>\n<mark> MVC</mark><br>\n<strong> 垂直应用架构</strong>：将应用切割成几个互不相干的小应用，在将每个小应用独立放到一个服务器上，如果哪一个应用的访问数量多就多加几台服务器。<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo03.png\" alt=\"垂直应用架构\"><br>\n<mark> RPC</mark><br>\n<strong> 分布式应用架构 (远程过程调用)</strong>：当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速的响应多变的市场需求。<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo04.png\" alt=\"分布式应用架构\"><br>\n<mark> SOA</mark><br>\n<strong> 流动计算架构</strong>：在分布式应用架构的基础上增加了一个<strong>调度、治理中心</strong>基于访问压力实时管理集群容量、提高集群的利用率，用于提高机器利用率的 资源调度和治理中心 (SOA) 是关键 <strong>(不浪费计算机资源)</strong><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo05.png\" alt=\"流动计算架构\"></p>\n<h1 id=\"dubbo\"><a class=\"markdownIt-Anchor\" href=\"#dubbo\">#</a> Dubbo</h1>\n<p><mark>官网:<span class=\"exturl\" data-url=\"aHR0cDovL2R1YmJvLmFwYWNoZS5vcmcvZW4tdXMvaW5kZXguaHRtbA==\">http://dubbo.apache.org/en-us/index.html</span></mark></p>\n<p>前面说过分布式系统是将一个系统拆分为多个不同的服务，那么对于一个像淘宝或者京东一样的大型系统能拆分出很多个服务来，这些服务我们该如何进行管理和调用呢！</p>\n<h2 id=\"设计架构\"><a class=\"markdownIt-Anchor\" href=\"#设计架构\">#</a> 设计架构</h2>\n<p>这个是 apache 官网上对 Duboo 设计架构的一张说明图，对于我一个初学者来说我可能看了没有什么感觉！<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo06.png\" alt=\"Dubbo架构\"><br>\n然后我又对于这张图进行了个人化的理解和说明‍(｀・ω・´) 请谨慎参考哦！</p>\n<p><img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo07.png\" alt=\"Dubbo设计架构\"><br>\n<strong>服务提供者（Provider）</strong>：暴露服务的服务提供方，服务提供者在启动时，向注册中心注册自己提供的服务。</p>\n<p><strong>服务消费者（Consumer）</strong>: 调用远程服务的服务消费方，服务消费者在启动时，向注册中心订阅自己所需的服务，服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用。</p>\n<p><strong>注册中心（Registry）</strong>：注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</p>\n<p><strong>监控中心（Monitor）</strong>：服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</p>\n<h2 id=\"工程架构\"><a class=\"markdownIt-Anchor\" href=\"#工程架构\">#</a> 工程架构</h2>\n<p>我在学习的过程中看到的用于 Dubbo 的工程架构图 (｀・ω・´)<br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo08.png\" alt=\"工程架构图\"><br>\n<strong> gmall-interface (公共接口层)</strong><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo09.png\" alt=\"服务提供者\"><br>\n<strong> gmall-user：用户模块（对用户接口的实现）</strong><mark>作为服务提供者</mark><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo10.png\" alt=\"服务提供者\"></p>\n<p><strong>gmall-order-web：订单模块（调用用户模块）</strong><mark>作为服务消费者</mark><br>\n<img data-src=\"http://rshecpthw.hb-bkt.clouddn.com/img/dubbo/dubbo11.png\" alt=\"服务消费者\"></p>\n<h2 id=\"配置文件\"><a class=\"markdownIt-Anchor\" href=\"#配置文件\">#</a> 配置文件</h2>\n<p><mark><strong>对服务提供者的文件配置</strong></mark><br>\n<strong> 1、引入 dubbo</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 引入dubbo <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>com<span class=\"token punctuation\">.</span>alibaba<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>dubbo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.6</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 由于我们使用zookeeper作为注册中心，所以需要操作zookeeper</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\tdubbo <span class=\"token number\">2.6</span>以前的版本引入zkclient操作zookeeper </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\tdubbo <span class=\"token number\">2.6</span>及以后的版本引入curator操作zookeeper</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t下面两个zk客户端根据dubbo版本<span class=\"token number\">2</span>选<span class=\"token number\">1</span>即可<span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>com<span class=\"token punctuation\">.</span><span class=\"token number\">101</span>tec<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>zkclient<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">0.10</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> curator<span class=\"token operator\">-</span>framework <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>curator<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>curator<span class=\"token operator\">-</span>framework<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.12</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>2、配置提供者</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>当前应用的名字  <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>application name<span class=\"token operator\">=</span><span class=\"token string\">\"gmall-user\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dubbo<span class=\"token operator\">:</span>application<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>指定注册中心的地址  <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>registry address<span class=\"token operator\">=</span><span class=\"token string\">\"zookeeper://118.24.44.169:2181\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span>使用dubbo协议，将服务暴露在<span class=\"token number\">20880</span>端口  <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>protocol name<span class=\"token operator\">=</span><span class=\"token string\">\"dubbo\"</span> port<span class=\"token operator\">=</span><span class=\"token string\">\"20880\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 指定需要暴露的服务 <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>service <span class=\"token keyword\">interface</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.atguigu.gmall.service.UserService\"</span> ref<span class=\"token operator\">=</span><span class=\"token string\">\"userServiceImpl\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr></table></figure><p><mark><strong>对服务消费者的文件配置</strong></mark><br>\n<strong> 1、引入 dubbo</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 引入dubbo <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>com<span class=\"token punctuation\">.</span>alibaba<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>dubbo<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.6</span><span class=\"token number\">.2</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 由于我们使用zookeeper作为注册中心，所以需要引入zkclient和curator操作zookeeper <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>com<span class=\"token punctuation\">.</span><span class=\"token number\">101</span>tec<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>zkclient<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">0.10</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\t\t</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> curator<span class=\"token operator\">-</span>framework <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>dependency<span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>groupId<span class=\"token punctuation\">></span></span>org<span class=\"token punctuation\">.</span>apache<span class=\"token punctuation\">.</span>curator<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>groupId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>artifactId<span class=\"token punctuation\">></span></span>curator<span class=\"token operator\">-</span>framework<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>artifactId<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\t<span class=\"token generics\"><span class=\"token punctuation\">&lt;</span>version<span class=\"token punctuation\">></span></span><span class=\"token number\">2.12</span><span class=\"token number\">.0</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>version<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>\t\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dependency<span class=\"token operator\">></span></pre></td></tr></table></figure><p><strong>2、配置消费者信息</strong></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 应用名 <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>application name<span class=\"token operator\">=</span><span class=\"token string\">\"gmall-order-web\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dubbo<span class=\"token operator\">:</span>application<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 指定注册中心地址 <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>\t<span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>registry address<span class=\"token operator\">=</span><span class=\"token string\">\"zookeeper://118.24.44.169:2181\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 生成远程服务代理，可以和本地bean一样使用demoService <span class=\"token operator\">--</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t<span class=\"token operator\">&lt;</span>dubbo<span class=\"token operator\">:</span>reference id<span class=\"token operator\">=</span><span class=\"token string\">\"userService\"</span> <span class=\"token keyword\">interface</span><span class=\"token operator\">=</span><span class=\"token string\">\"com.atguigu.gmall.service.UserService\"</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dubbo<span class=\"token operator\">:</span>reference<span class=\"token operator\">></span></pre></td></tr></table></figure><h2 id=\"高可用\"><a class=\"markdownIt-Anchor\" href=\"#高可用\">#</a> 高可用</h2>\n<p><strong>1.zookeeper 宕机与 Dubbo 直连</strong><br>\n现象:zookeeper 注册中心宕机，还可以消费 Dubbo 暴露的服务。<br>\n<mark>原因：健壮性</mark></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>.监控中心宕掉不影响使用，只是丢失部分采样数据</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">2</span>.数据库宕掉后，注册中心仍能通过缓存提供服务列表查询，但不能注册新服务</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">3</span>.注册中心对等集群，任意一台宕掉后，将自动切换到另一台</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">4</span>.注册中心全部宕掉后，服务提供者和服务消费者仍能通过本地缓存通讯</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">5</span>.服务提供者无状态，任意一台宕掉后，不影响使用</pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">6</span>.服务提供者无状态，任意一台宕掉后，不影响使用</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "https://yangkecheng.github.io/2023/02/28/hello-world/",
            "url": "https://yangkecheng.github.io/2023/02/28/hello-world/",
            "title": "Hello World",
            "date_published": "2023-02-27T16:00:00.000Z",
            "content_html": "<h2 id=\"this-is-a-hello-world\"><a class=\"markdownIt-Anchor\" href=\"#this-is-a-hello-world\">#</a> This is a Hello World</h2>\n",
            "tags": []
        }
    ]
}